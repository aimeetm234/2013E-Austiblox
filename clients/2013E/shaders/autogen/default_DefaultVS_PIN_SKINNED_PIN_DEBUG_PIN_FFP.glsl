attribute vec4 secondary_colour;
attribute vec2 uv1;
attribute vec2 uv0;
attribute vec3 normal;
attribute vec4 vertex;
uniform vec4 WorldMatrixArray[216];
uniform mat4 ViewProjection;
uniform vec3 Lamp1Color;
uniform vec3 Lamp0Dir;
uniform vec3 Lamp0Color;
uniform vec4 DebugColor;
uniform vec3 CameraPosition;
uniform vec3 AmbientColor;
void main ()
{
  ivec4 tmpvar_1;
  tmpvar_1 = ivec4(secondary_colour);
  vec4 tmpvar_2;
  tmpvar_2 = WorldMatrixArray[(tmpvar_1.x * 3)];
  vec4 tmpvar_3;
  tmpvar_3 = WorldMatrixArray[((tmpvar_1.x * 3) + 1)];
  vec4 tmpvar_4;
  tmpvar_4 = WorldMatrixArray[((tmpvar_1.x * 3) + 2)];
  vec3 tmpvar_5;
  tmpvar_5.x = dot (tmpvar_2, vertex);
  tmpvar_5.y = dot (tmpvar_3, vertex);
  tmpvar_5.z = dot (tmpvar_4, vertex);
  vec3 tmpvar_6;
  tmpvar_6.x = dot (tmpvar_2.xyz, normal);
  tmpvar_6.y = dot (tmpvar_3.xyz, normal);
  tmpvar_6.z = dot (tmpvar_4.xyz, normal);
  float tmpvar_7;
  tmpvar_7 = dot (tmpvar_6, -(Lamp0Dir));
  vec4 tmpvar_8;
  tmpvar_8.xw = vec2(1.0, 1.0);
  tmpvar_8.y = max (0.0, tmpvar_7);
  tmpvar_8.z = pow ((max (0.0, dot (normalize((-(Lamp0Dir) + normalize((CameraPosition - tmpvar_5)))), tmpvar_6)) * float((tmpvar_7 >= 0.0))), 50.0);
  vec4 tmpvar_9;
  tmpvar_9.w = 1.0;
  tmpvar_9.xyz = tmpvar_5;
  vec4 tmpvar_10;
  tmpvar_10 = (ViewProjection * tmpvar_9);
  vec4 tmpvar_11;
  tmpvar_11.xyz = (((AmbientColor + (tmpvar_8.y * Lamp0Color)) + (max (-(tmpvar_7), 0.0) * Lamp1Color)) * DebugColor.xyz);
  tmpvar_11.w = DebugColor.w;
  vec4 tmpvar_12;
  tmpvar_12.w = 0.0;
  tmpvar_12.xyz = ((tmpvar_8.z * Lamp0Color) * 0.9);
  gl_Position = tmpvar_10;
  vec4 tmpvar_13;
  tmpvar_13.zw = vec2(0.0, 1.0);
  tmpvar_13.xy = uv0;
  gl_TexCoord[0] = tmpvar_13;
  vec4 tmpvar_14;
  tmpvar_14.zw = vec2(0.0, 1.0);
  tmpvar_14.xy = uv1;
  gl_TexCoord[1] = tmpvar_14;
  gl_FrontColor = tmpvar_11;
  gl_FrontSecondaryColor = tmpvar_12;
  gl_FogFragCoord = tmpvar_10.w;
}

